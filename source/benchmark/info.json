{
    "paws-x-en": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/paws-x/paws-x-en.zip",
        "func": "load_paws",
        "columns_type": {
            "sentence1": "text",
            "sentence2": "text",
            "label": "int"
        },
        "properties": {
            "n_columns": 3,
            "n_instances": [
                49401,
                4000
            ],
            "targets": [
                "label"
            ],
            "null_values": 0,
            "task": "binary",
            "classes": 2,
            "class balance": 0.7917089801247642
        }
    },
    "paws-x-es": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/paws-x/paws-x-es.zip",
        "func": "load_paws",
        "columns_type": {
            "sentence1": "text",
            "sentence2": "text",
            "label": "int"
        },
        "properties": {
            "n_columns": 3,
            "n_instances": [
                49401,
                4000
            ],
            "targets": [
                "label"
            ],
            "null_values": 544,
            "task": "binary",
            "classes": 2,
            "class balance": 0.7917089801247642
        }
    },
    "wnli-es": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/wnli-es/wnli-es.zip",
        "func": "load_wnli",
        "columns_type": {
            "sentence1": "text",
            "sentence2": "text",
            "label": "int"
        },
        "properties": {
            "n_columns": 3,
            "n_instances": [
                635,
                70
            ],
            "targets": [
                "label"
            ],
            "null_values": 0,
            "task": "binary",
            "classes": 2,
            "class balance": 0.9659442724458205
        }
    },
    "wikiann-es": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/wikiann-es/wikiann-es.zip",
        "func": "load_wikiann",
        "columns_type": {
            "tokens": "Seqtokens",
            "tags": "Seqtags"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                0,
                0
            ],
            "targets": null,
            "null_values": 0,
            "task": "entity",
            "classes": null,
            "class balance": null
        }
    },
    "wikicat-es": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/wikicat-es/wikicat-es.zip",
        "func": "load_wikicat",
        "columns_type": {
            "text": "text",
            "label": "text"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                7909,
                3402
            ],
            "targets": [
                "label"
            ],
            "null_values": 0,
            "task": "multiclass",
            "classes": 19,
            "class balance": 0.03602484472049689
        }
    },
    "sst-en": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/sst-en/sst-en.zip",
        "func": "load_sst_en",
        "columns_type": {
            "label": "int",
            "text": "text"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                8544,
                2210
            ],
            "targets": [
                "label"
            ],
            "null_values": 0,
            "task": "multiclass",
            "classes": 5,
            "class balance": 0.4702842377260982
        }
    },
    "stroke-prediction": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/stroke-prediction/stroke-prediction.zip",
        "func": "load_stroke",
        "columns_type": {
            "gender": "text",
            "age": "float",
            "hypertension": "int",
            "heart_disease": "int",
            "ever_married": "text",
            "work_type": "text",
            "Residence_type": "text",
            "avg_glucose_level": "float",
            "bmi": "float",
            "smoking_status": "text",
            "stroke": "int"
        },
        "properties": {
            "n_columns": 11,
            "n_instances": [
                4088,
                1022
            ],
            "targets": [
                "stroke"
            ],
            "null_values": 201,
            "task": "binary",
            "classes": 2,
            "class balance": 0.051169966572383645
        }
    },
    "women-clothing": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/women-clothing/women-clothing.zip",
        "func": "load_women_clothing",
        "columns_type": {
            "Age": "int",
            "Title": "text",
            "Review Text": "text",
            "Rating": "int",
            "Recommended IND": "int",
            "Positive Feedback Count": "int",
            "Division Name": "text",
            "Department Name": "text",
            "Class Name": "text"
        },
        "properties": {
            "n_columns": 9,
            "n_instances": [
                16440,
                7046
            ],
            "targets": [
                "Class Name"
            ],
            "null_values": 4697,
            "task": "multiclass",
            "classes": 21,
            "class balance": 0.0002247696111485727
        }
    },
    "fraudulent-jobs": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/fraudulent-jobs/fraudulent-jobs.zip",
        "func": "load_jobs",
        "columns_type": {
            "title": "text",
            "location": "text",
            "department": "text",
            "salary_range": "text",
            "company_profile": "text",
            "description": "text",
            "requirements": "text",
            "benefits": "text",
            "telecommuting": "int",
            "has_company_logo": "int",
            "has_questions": "int",
            "employment_type": "text",
            "required_experience": "text",
            "required_education": "text",
            "industry": "text",
            "function": "text",
            "fraudulent": "int"
        },
        "properties": {
            "n_columns": 17,
            "n_instances": [
                12516,
                5364
            ],
            "targets": [
                "fraudulent"
            ],
            "null_values": 70103,
            "task": "binary",
            "classes": 2,
            "class balance": 0.042305129913391075
        }
    },
    "spanish-wine": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/spanish-wine/spanish-wine.zip",
        "func": "load_wines",
        "columns_type": {
            "winery": "text",
            "wine": "text",
            "year": "text",
            "rating": "float",
            "num_reviews": "int",
            "country": "text",
            "region": "text",
            "price": "float",
            "type": "text",
            "body": "Int64",
            "acidity": "Int64"
        },
        "properties": {
            "n_columns": 11,
            "n_instances": [
                6000,
                1500
            ],
            "targets": [
                "price"
            ],
            "null_values": 2885,
            "task": "regression",
            "classes": null,
            "class balance": null
        }
    },
    "project-kickstarter": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/project-kickstarter/project-kickstarter.zip",
        "func": "load_project_kickstarter",
        "columns_type": {
            "name": "text",
            "desc": "text",
            "goal": "float",
            "keywords": "text",
            "disable_communication": "bool",
            "country": "text",
            "currency": "text",
            "deadline": "int",
            "state_changed_at": "int",
            "created_at": "int",
            "launched_at": "int",
            "final_status": "int"
        },
        "properties": {
            "n_columns": 12,
            "n_instances": [
                108129,
                63465
            ],
            "targets": [
                "final_status"
            ],
            "null_values": 16,
            "task": "binary",
            "classes": 2,
            "class balance": 0.4697830578512397
        }
    },
    "price-book": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/price-book/price-book.zip",
        "func": "load_price_book",
        "columns_type": {
            "Title": "text",
            "Author": "text",
            "Edition": "text",
            "Reviews": "text",
            "Ratings": "text",
            "Synopsis": "text",
            "Genre": "text",
            "BookCategory": "text",
            "Price": "float"
        },
        "properties": {
            "n_columns": 9,
            "n_instances": [
                6237,
                1560
            ],
            "targets": [
                "Price"
            ],
            "null_values": 0,
            "task": "regression",
            "classes": null,
            "class balance": null
        }
    },
    "inferes": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/inferes/inferes.zip",
        "func": "load_inferes",
        "columns_type": {
            "Premise": "text",
            "Hypothesis": "text",
            "Label": "text",
            "Topic": "int",
            "Anno": "int",
            "Anno_Type": "text"
        },
        "properties": {
            "n_columns": 6,
            "n_instances": [
                6444,
                1612
            ],
            "targets": [
                "Label"
            ],
            "null_values": 0,
            "task": "multiclass",
            "classes": 3,
            "class balance": 0.8072390572390572
        }
    },
    "predict-salary": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/predict-salary/predict-salary.zip",
        "func": "load_predict_salary",
        "columns_type": {
            "experience": "text",
            "job_description": "text",
            "job_desig": "text",
            "job_type": "text",
            "key_skills": "text",
            "location": "text",
            "salary": "text",
            "company_name_encoded": "int"
        },
        "properties": {
            "n_columns": 8,
            "n_instances": [
                19802,
                6601
            ],
            "targets": [
                "salary"
            ],
            "null_values": 25910,
            "task": "multiclass",
            "classes": 6,
            "class balance": 0.35
        }
    },
    "stsb-en": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/stsb/stsb-en.zip",
        "func": "load_stsb",
        "columns_type": {
            "sentence1": "text",
            "sentence2": "text",
            "score": "float"
        },
        "properties": {
            "n_columns": 3,
            "n_instances": [
                7249,
                1379
            ],
            "targets": [
                "score"
            ],
            "null_values": 0,
            "task": "regression",
            "classes": null,
            "class balance": null
        }
    },
    "stsb-es": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/stsb/stsb-es.zip",
        "func": "load_stsb",
        "columns_type": {
            "sentence1": "text",
            "sentence2": "text",
            "score": "float"
        },
        "properties": {
            "n_columns": 3,
            "n_instances": [
                7249,
                1379
            ],
            "targets": [
                "score"
            ],
            "null_values": 0,
            "task": "regression",
            "classes": null,
            "class balance": null
        }
    },
    "haha": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/haha/haha.zip",
        "func": "load_haha",
        "columns_type": {
            "text": "text",
            "is_humor": "int"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                24000,
                6000
            ],
            "targets": [
                "is_humor",
                "average"
            ],
            "null_values": 0,
            "task": "binary",
            "classes": 2,
            "class balance": 0.6274496507764291
        }
    },
    "meddocan": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/meddocan/meddocan.zip",
        "func": "load_meddocan",
        "columns_type": {
            "tokens": "Seqtokens",
            "tags": "Seqtags"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                0,
                0
            ],
            "targets": null,
            "null_values": 0,
            "task": "entity",
            "classes": null,
            "class balance": null
        }
    },
    "vaccine-es": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/vaccine/vaccine-es.zip",
        "func": "load_vaccine",
        "columns_type": {
            "text": "text",
            "label": "text"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                2003,
                694
            ],
            "targets": [
                "label"
            ],
            "null_values": 0,
            "task": "multiclass",
            "classes": 3,
            "class balance": 0.5069370330843116
        }
    },
    "vaccine-en": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/vaccine/vaccine-en.zip",
        "func": "load_vaccine",
        "columns_type": {
            "text": "text",
            "label": "text"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                1070,
                312
            ],
            "targets": [
                "label"
            ],
            "null_values": 0,
            "task": "multiclass",
            "classes": 3,
            "class balance": 0.4179389312977099
        }
    },
    "sentiment-lexicons-es": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/sentiment-lexicons/sentiment-lexicons-es.zip",
        "func": "load_sentiment",
        "columns_type": {
            "word": "text",
            "label": "text"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                4075,
                200
            ],
            "targets": [
                "label"
            ],
            "null_values": 0,
            "task": "binary",
            "classes": 2,
            "class balance": 0.5553435114503816
        }
    },
    "wikineural-en": {
        "url": "wikineural-en",
        "func": "load_wikineural",
        "columns_type": {
            "tokens": "Seqtokens",
            "tags": "Seqtags"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                0,
                0
            ],
            "targets": null,
            "null_values": 0,
            "task": "entity",
            "classes": null,
            "class balance": null
        }
    },
    "wikineural-es": {
        "url": "wikineural-es",
        "func": "load_wikineural",
        "columns_type": {
            "tokens": "Seqtokens",
            "tags": "Seqtags"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                0,
                0
            ],
            "targets": null,
            "null_values": 0,
            "task": "entity",
            "classes": null,
            "class balance": null
        }
    },
    "language-identification": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/language-identification/language-identification.zip",
        "func": "load_language",
        "columns_type": {
            "labels": "text",
            "text": "text"
        },
        "properties": {
            "n_columns": 2,
            "n_instances": [
                80000,
                10000
            ],
            "targets": [
                "labels"
            ],
            "null_values": 0,
            "task": "multiclass",
            "classes": 20,
            "class balance": 1.0
        }
    },
    "twitter-human-bots": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/twitter-human-bots/twitter-human-bots.zip",
        "func": "load_twitter_human",
        "columns_type": {
            "created_at": "datetime64[ns]",
            "default_profile": "bool",
            "default_profile_image": "bool",
            "description": "text",
            "favourites_count": "int",
            "followers_count": "int",
            "friends_count": "int",
            "geo_enabled": "bool",
            "lang": "text",
            "location": "text",
            "profile_background_image_url": "text",
            "profile_image_url": "text",
            "screen_name": "text",
            "statuses_count": "int",
            "verified": "bool",
            "average_tweets_per_day": "float",
            "account_age_days": "int",
            "account_type": "text"
        },
        "properties": {
            "n_columns": 19,
            "n_instances": [
                29950,
                7488
            ],
            "targets": [
                "account_type"
            ],
            "null_values": 19716,
            "task": "binary",
            "classes": 2,
            "class balance": 0.5019306955518781
        }
    },
    "google-guest": {
        "url": "https://github.com/amyGB99/automl_benchmark/releases/download/google-guest/google-guest.zip",
        "func": "load_google_guest",
        "columns_type": {
            "question_title": "text",
            "question_body": "text",
            "question_user_name": "text",
            "question_user_page": "text",
            "answer": "text",
            "answer_user_name": "text",
            "answer_user_page": "text",
            "url": "text",
            "category": "text",
            "host": "text",
            "question_asker_intent_understanding": "float",
            "question_body_critical": "float",
            "question_conversational": "float",
            "question_expect_short_answer": "float",
            "question_fact_seeking": "float",
            "question_has_commonly_accepted_answer": "float",
            "question_interestingness_others": "float",
            "question_interestingness_self": "float",
            "question_multi_intent": "float",
            "question_not_really_a_question": "float",
            "question_opinion_seeking": "float",
            "question_type_choice": "float",
            "question_type_compare": "float",
            "question_type_consequence": "float",
            "question_type_definition": "float",
            "question_type_entity": "float",
            "question_type_instructions": "float",
            "question_type_procedure": "float",
            "question_type_reason_explanation": "float",
            "question_type_spelling": "float",
            "question_well_written": "float",
            "answer_helpful": "float",
            "answer_level_of_information": "float",
            "answer_plausible": "float",
            "answer_relevance": "float",
            "answer_satisfaction": "float",
            "answer_type_instructions": "float",
            "answer_type_procedure": "float",
            "answer_type_reason_explanation": "float",
            "answer_well_written": "float"
        },
        "properties": {
            "n_columns": 40,
            "n_instances": [
                6079,
                476
            ],
            "targets": [
                "question_asker_intent_understanding",
                "question_body_critical",
                "question_conversational",
                "question_expect_short_answer",
                "question_fact_seeking",
                "question_has_commonly_accepted_answer",
                "question_interestingness_others",
                "question_interestingness_self",
                "question_multi_intent",
                "question_not_really_a_question",
                "question_opinion_seeking",
                "question_type_choice",
                "question_type_compare",
                "question_type_consequence",
                "question_type_definition",
                "question_type_entity",
                "question_type_instructions",
                "question_type_procedure",
                "question_type_reason_explanation",
                "question_type_spelling",
                "question_well_written",
                "answer_helpful",
                "answer_level_of_information",
                "answer_plausible",
                "answer_relevance",
                "answer_satisfaction",
                "answer_type_instructions",
                "answer_type_procedure",
                "answer_type_reason_explanation",
                "answer_well_written"
            ],
            "null_values": 0,
            "task": "regression",
            "classes": null,
            "class balance": null
        }
    }
}